{"ast":null,"code":"import _objectSpread from \"/home/emre/PycharmProjects/djangoProject/frontend/project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.slice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport Vue from \"vue\";\nexport default {\n  name: \"Groups\",\n  data: function data() {\n    return {\n      title: \"\",\n      value: \"\",\n      groups: [],\n      update: false,\n      group: {\n        'id': null,\n        'title': null\n      }\n    };\n  },\n  created: function created() {\n    this.getAllGroups();\n    console.log(this.groups);\n  },\n  methods: {\n    capitalizeFirstChar: function capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    submitTask: function submitTask() {\n      if (this.title === 0) return;\n      axios.post('/todos/groups/', {\n        'title': this.title\n      }).then(function (r) {\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla grup oluşturdunuz!'\n        });\n      });\n    },\n    getAllGroups: function getAllGroups() {\n      var _this = this;\n\n      axios.get('/todos/groups/').then(function (r) {\n        _this.groups = r.data.results;\n      });\n    },\n    updatePopUp: function updatePopUp(group) {\n      this.group = _objectSpread({}, group);\n      this.update = true;\n    },\n    updateValue: function updateValue() {\n      axios.put(\"/todos/groups/\".concat(this.group.id, \"/\"), {\n        'title': this.group.title\n      }).then(function (r) {\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla güncellediniz!'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AAEA;AACAA,gBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,eADA;AAEAC,eAFA;AAGAC,gBAHA;AAIAC,mBAJA;AAKAC;AACA,kBADA;AAEA;AAFA;AALA;AAUA,GAbA;AAcAC,SAdA,qBAcA;AACA;AACAC;AACA,GAjBA;AAkBAC;AACAC,uBADA,+BACAC,GADA,EACA;AACA;AACA,KAHA;AAIAC,cAJA,wBAIA;AACA;AACAC;AAAA;AAAA;AACAC;AACAC,yBADA;AAEAb,2BAFA;AAGAc;AAHA;AAKA,OANA;AAOA,KAbA;AAcAC,gBAdA,0BAcA;AAAA;;AACAJ;AACA;AACA,OAFA;AAGA,KAlBA;AAmBAK,eAnBA,uBAmBAZ,KAnBA,EAmBA;AACA;AACA;AACA,KAtBA;AAuBAa,eAvBA,yBAuBA;AACAN;AAAA;AAAA;AACAC;AACAC,yBADA;AAEAb,2BAFA;AAGAc;AAHA;AAKA,OANA;AAOA;AA/BA;AAlBA","names":["name","data","title","value","groups","update","group","created","console","methods","capitalizeFirstChar","str","submitTask","axios","Vue","type","text","getAllGroups","updatePopUp","updateValue"],"sourceRoot":"src/views","sources":["Groups.vue"],"sourcesContent":["<template>\n  <div class=\"container\" style=\"max-width: 600px\">\n    <div class=\"d-flex mt-5\">\n      <input\n        type=\"text\"\n        v-model=\"title\"\n        placeholder=\"Group Title\"\n        class=\"w-100 form-control\"\n      />\n      <button class=\"btn btn-warning rounded-0 ml-2\" @click=\"submitTask\">\n        SUBMIT\n      </button>\n    </div>\n    <table class=\"table table-bordered mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Group</th>\n          <th scope=\"col\" style=\"width: 120px\">Operation</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(m, index) in groups\" :key=\"index\">\n          <td>\n              {{ capitalizeFirstChar(m.title) }}\n          </td>\n          <td>\n            <div class=\"d-flex\">\n              <button class=\"btn btn-outline-info mr-1\" @click=\"updatePopUp(m)\">\n                    Update\n                </button>\n               <button class=\"btn btn-outline-danger\">\n                    Delete\n                </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n     <div v-if=\"update\" class=\"d-flex mt-5\">\n      <input\n        type=\"text\"\n        v-model=\"group.title\"\n        placeholder=\"Group Title\"\n        class=\"w-100 form-control\"\n      />\n      <button class=\"btn btn-warning rounded-0 ml-2\" @click=\"updateValue\">\n        Update\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Vue from \"vue\";\n\nexport default {\n  name: \"Groups\",\n  data() {\n    return {\n      title: \"\",\n      value: \"\",\n      groups: [],\n      update: false,\n      group: {\n        'id': null,\n        'title': null,\n      }\n    };\n  },\n  created() {\n    this.getAllGroups()\n    console.log(this.groups)\n  },\n  methods: {\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    submitTask() {\n      if (this.title === 0) return;\n      axios.post('/todos/groups/', {'title': this.title}).then(r=> {\n        Vue.notify({\n                type: 'success',\n                title: 'Başarılı',\n                text: 'Başarıyla grup oluşturdunuz!',\n              });\n      })\n    },\n    getAllGroups() {\n      axios.get('/todos/groups/').then( r => {\n        this.groups = r.data.results\n      })\n    },\n    updatePopUp (group) {\n      this.group = {...group}\n      this.update = true\n    },\n    updateValue () {\n      axios.put(`/todos/groups/${this.group.id}/`,{'title': this.group.title}).then(r=> {\n        Vue.notify({\n                type: 'success',\n                title: 'Başarılı',\n                text: 'Başarıyla güncellediniz!',\n              });\n      })\n    }\n  },\n};\n</script>\n\n<style scoped>\n.pointer {\n  cursor: pointer;\n}\n.noselect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Old versions of Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n.line-through {\n  text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module"}