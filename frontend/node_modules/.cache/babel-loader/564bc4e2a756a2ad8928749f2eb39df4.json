{"ast":null,"code":"import _objectSpread from \"/home/emre/PycharmProjects/djangoProject/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.slice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport axios from \"axios\";\nimport Vue from \"vue\";\nexport default {\n  name: \"ToDo\",\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      task: {\n        title: '',\n        isActive: true,\n        completed: false,\n        priority: 1,\n        due_date: null,\n        groups: -1\n      },\n      keyword: '',\n      editedTask: null,\n      options: [],\n      value: '',\n      todoList: [],\n      popUp: false\n    };\n  },\n  watch: {\n    keyword: function keyword(newKeyword, oldKeyword) {\n      if (newKeyword !== oldKeyword) {\n        this.getAllTodos(newKeyword);\n      }\n    }\n  },\n  created: function created() {\n    this.getAllGroups();\n    this.getAllTodos();\n  },\n  methods: {\n    getAllGroups: function getAllGroups() {\n      var _this = this;\n\n      axios.get('/todos/groups/').then(function (r) {\n        _this.options = r.data.results;\n      });\n    },\n    getAllTodos: function getAllTodos() {\n      var _this2 = this;\n\n      var search_query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      console.log(search_query);\n\n      if (search_query === '') {\n        axios.get('/todos/todo/').then(function (r) {\n          _this2.todoList = r.data.results;\n        });\n      } else {\n        axios.get(\"/todos/todo/\".concat(search_query)).then(function (r) {\n          _this2.todoList = r.data.results;\n        });\n      }\n    },\n    capitalizeFirstChar: function capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    update: function update(v) {\n      $('#exampleModalCenter').modal('toggle');\n      this.task = _objectSpread({}, v);\n      this.popUp = true;\n    },\n    updateToDo: function updateToDo(s) {\n      this.task.groups = this.task.groups.id;\n      axios.put(\"/todos/todo/\".concat(s.id, \"/\"), this.task).then(function (r) {\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla güncellediniz!'\n        });\n      });\n      this.getAllTodos();\n    },\n    deleteToDo: function deleteToDo(s) {\n      this.task.groups = this.task.groups.id;\n      axios.delete(\"/todos/todo/\".concat(s.id, \"/\")).then(function (r) {\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla sildiniz!'\n        });\n      });\n      this.getAllTodos();\n    },\n    saveToDO: function saveToDO() {\n      var _this3 = this;\n\n      this.task.groups = this.task.groups.id;\n      axios.post('/todos/todo/', this.task).then(function (r) {\n        _this3.getAllTodos();\n\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla todo oluşturdunuz!'\n        });\n      });\n      this.clearToDO();\n    },\n    clearToDO: function clearToDO() {\n      this.task = {\n        title: '',\n        isActive: true,\n        completed: false,\n        priority: 1,\n        due_date: null,\n        groups: -1\n      };\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AAEA;AACAA,cADA;AAEAC;AAAAC;AAAA,GAFA;AAGAC,MAHA,kBAGA;AACA;AACAC;AACAC,iBADA;AAEAC,sBAFA;AAGAC,wBAHA;AAIAC,mBAJA;AAKAC,sBALA;AAMAC;AANA,OADA;AASAC,iBATA;AAUAC,sBAVA;AAWAC,iBAXA;AAYAC,eAZA;AAaAC,kBAbA;AAcAC;AAdA;AAgBA,GApBA;AAqBAC;AACAN,WADA,mBACAO,UADA,EACAC,UADA,EACA;AACA;AACA;AACA;AACA;AALA,GArBA;AA4BAC,SA5BA,qBA4BA;AACA;AACA;AACA,GA/BA;AAgCAC;AACAC,gBADA,0BACA;AAAA;;AACAC;AACA;AACA,OAFA;AAGA,KALA;AAMAC,eANA,yBAMA;AAAA;;AAAA;AACAC;;AACA;AACAF;AACA;AACA,SAFA;AAGA,OAJA,MAIA;AACAA;AACA;AACA,SAFA;AAGA;AAEA,KAlBA;AAmBAG,uBAnBA,+BAmBAC,GAnBA,EAmBA;AACA;AACA,KArBA;AAsBAC,UAtBA,kBAsBAC,CAtBA,EAsBA;AACAC;AACA;AACA;AACA,KA1BA;AA2BAC,cA3BA,sBA2BAC,CA3BA,EA2BA;AACA;AACAT;AACAU;AACAC,yBADA;AAEA7B,2BAFA;AAGA8B;AAHA;AAKA,OANA;AAOA;AACA,KArCA;AAsCAC,cAtCA,sBAsCAJ,CAtCA,EAsCA;AACA;AACAT;AACAU;AACAC,yBADA;AAEA7B,2BAFA;AAGA8B;AAHA;AAKA,OANA;AAOA;AACA,KAhDA;AAiDAE,YAjDA,sBAiDA;AAAA;;AACA;AACAd;AACA;;AACAU;AACAC,yBADA;AAEA7B,2BAFA;AAGA8B;AAHA;AAKA,OAPA;AAQA;AACA,KA5DA;AA6DAG,aA7DA,uBA6DA;AACA;AACAjC,iBADA;AAEAC,sBAFA;AAGAC,wBAHA;AAIAC,mBAJA;AAKAC,sBALA;AAMAC;AANA;AAQA;AAtEA;AAhCA","names":["name","components","Multiselect","data","task","title","isActive","completed","priority","due_date","groups","keyword","editedTask","options","value","todoList","popUp","watch","newKeyword","oldKeyword","created","methods","getAllGroups","axios","getAllTodos","console","capitalizeFirstChar","str","update","v","$","updateToDo","s","Vue","type","text","deleteToDo","saveToDO","clearToDO"],"sourceRoot":"src/views","sources":["ToDo.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- Heading -->\n    <h2 class=\"text-center mt-5\">My Vue Todo App</h2>\n    <div class=\"d-flex ml-auto mt-5\">\n      <button type=\"button\" class=\"btn btn-outline-success ml-auto\" data-toggle=\"modal\"\n              data-target=\"#exampleModalCenter\">\n        ToDo Olustur\n      </button>\n    </div>\n    <div class=\"input-group col-8 mt-2\">\n      <input v-model=\"keyword\" type=\"text\" class=\"form-control\" placeholder=\"Search by Group or Priority or Due Date\">\n    </div>\n    <div class=\"modal fade bd-example-modal-xl\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-dialog-centered modal-xl\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <div>\n              <div class=\"col-6\">\n                <label>Groups</label>\n                <multiselect\n                    v-model=\"task.groups\"\n                    tag-placeholder=\"Not Found!\"\n                    placeholder=\"Group Title\"\n                    label=\"title\"\n                    track-by=\"id\"\n                    :options=\"options\"\n                    :multiple=\"false\"\n                    :taggable=\"false\"\n                />\n              </div>\n              <div class=\"d-flex mt-2\" style=\"align-items: end;\">\n                <div class=\"col-2\">\n                  <input\n                      type=\"text\"\n                      v-model=\"task.title\"\n                      placeholder=\"Enter task\"\n                      class=\"w-100 form-control mr-2\"\n                  />\n                </div>\n                <div class=\"col-2\">\n                  <label>Is Active</label>\n                  <div class=\"custom-control custom-switch\">\n                    <input\n                        id=\"customSwitch3\"\n                        v-model=\"task.isActive\"\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        required\n                    >\n                    <label class=\"custom-control-label\" for=\"customSwitch3\">Is Active</label>\n                  </div>\n                </div>\n                <div class=\"col-2\">\n                  <label>Completed</label>\n                  <div class=\"custom-control custom-switch\">\n                    <input\n                        id=\"customSwitch2\"\n                        v-model=\"task.completed\"\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        required\n                    >\n                    <label class=\"custom-control-label\" for=\"customSwitch2\">Completed</label>\n                  </div>\n                </div>\n                <div class=\"form-group col-3 m-0\">\n                  <label for=\"exampleFormControlSelect1\">Priority</label>\n                  <select class=\"form-control\" id=\"exampleFormControlSelect1\" v-model=\"task.priority\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </select>\n                </div>\n                <div class=\"col-3\">\n                  <input\n                      type=\"date\"\n                      v-model=\"task.due_date\"\n                      placeholder=\"Enter task\"\n                      class=\"w-100 form-control mr-2\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button v-if=\"!popUp\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" @click=\"clearToDO\">\n              Close\n            </button>\n            <button v-if=\"popUp\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" @click=\"deleteToDo(task)\">\n              Delete\n            </button>\n            <button v-if=\"!popUp\" type=\"button\" class=\"btn btn-primary\" @click=\"saveToDO\">Save changes</button>\n            <button v-if=\"popUp\" type=\"button\" class=\"btn btn-primary\" @click=\"updateToDo(task)\">Update</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    <!-- Task table -->\n    <table class=\"table table-bordered mt-5\">\n      <thead>\n      <tr>\n        <th scope=\"col\" class=\"text-center\">ToDo Title</th>\n        <th scope=\"col\" class=\"text-center\">Group Name</th>\n        <th scope=\"col\" style=\"width: 120px\">IsActive</th>\n        <th scope=\"col\" style=\"width: 120px\">Completed</th>\n        <th scope=\"col\" style=\"width: 120px\">Priority</th>\n        <th scope=\"col\" class=\"text-center\">Due Date</th>\n        <th scope=\"col\" class=\"text-center\">Operation</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(task, index) in todoList\" :key=\"index\">\n        <td>\n          {{ task.title }}\n        </td>\n        <td>\n          {{ task.groups.title }}\n        </td>\n        <td>\n          {{ task.is_active ? 'Devam Ediyor' : 'Pasif' }}\n        </td>\n        <td>\n            <span :class=\"{ 'line-through': task.completed === true }\">\n               {{ task.completed ? 'Tamamlandı' : 'Devam Ediyor' }}\n            </span>\n        </td>\n        <td>\n          {{ task.priority }}\n        </td>\n        <td class=\"text-center\">\n          {{ task.due_date }}\n        </td>\n        <td>\n          <div class=\"d-flex\">\n            <button class=\"btn btn-outline-info mr-1\" @click=\"update(task)\">\n              Operations\n            </button>\n          </div>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\n\nimport Multiselect from 'vue-multiselect'\nimport axios from \"axios\";\nimport Vue from \"vue\";\n\nexport default {\n  name: \"ToDo\",\n  components: {Multiselect},\n  data() {\n    return {\n      task: {\n        title: '',\n        isActive: true,\n        completed: false,\n        priority: 1,\n        due_date: null,\n        groups: -1,\n      },\n      keyword: '',\n      editedTask: null,\n      options: [],\n      value: '',\n      todoList: [],\n      popUp: false,\n    };\n  },\n  watch: {\n    keyword(newKeyword, oldKeyword) {\n      if (newKeyword !== oldKeyword) {\n        this.getAllTodos(newKeyword)\n      }\n    }\n  },\n  created() {\n    this.getAllGroups()\n    this.getAllTodos()\n  },\n  methods: {\n    getAllGroups() {\n      axios.get('/todos/groups/').then(r => {\n        this.options = r.data.results\n      })\n    },\n    getAllTodos(search_query = '') {\n      console.log(search_query)\n      if (search_query === '') {\n        axios.get('/todos/todo/').then(r => {\n        this.todoList = r.data.results\n       })\n      } else {\n        axios.get(`/todos/todo/${search_query}` ).then((r) => {\n                this.todoList = r.data.results\n            })\n      }\n\n    },\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    update(v) {\n      $('#exampleModalCenter').modal('toggle')\n      this.task = {...v}\n      this.popUp = true\n    },\n    updateToDo(s) {\n      this.task.groups = this.task.groups.id\n      axios.put(`/todos/todo/${s.id}/`, this.task).then(r => {\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla güncellediniz!',\n        });\n      })\n      this.getAllTodos()\n    },\n    deleteToDo(s) {\n      this.task.groups = this.task.groups.id\n      axios.delete(`/todos/todo/${s.id}/`).then(r => {\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla sildiniz!',\n        });\n      })\n      this.getAllTodos()\n    },\n    saveToDO() {\n      this.task.groups = this.task.groups.id\n      axios.post('/todos/todo/', this.task).then(r => {\n        this.getAllTodos()\n        Vue.notify({\n          type: 'success',\n          title: 'Başarılı',\n          text: 'Başarıyla todo oluşturdunuz!',\n        });\n      })\n      this.clearToDO()\n    },\n    clearToDO() {\n      this.task = {\n        title: '',\n        isActive: true,\n        completed: false,\n        priority: 1,\n        due_date: null,\n        groups: -1,\n      }\n    }\n  },\n};\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n\n<style scoped>\n.pointer {\n  cursor: pointer;\n}\n\n.line-through {\n  text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module"}